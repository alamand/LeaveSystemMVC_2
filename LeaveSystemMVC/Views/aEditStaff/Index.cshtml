@model LeaveSystemMVC.Models.sEmployeeModel
@Html.Partial("_LeftMenu")

<div class="col-md-10">
    <h2>Edit Staff Member</h2>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="col-md-10">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="text-muted bootstrap-admin-box-title">Application Details</div>
                </div>
                <div class="bootstrap-admin-panel-content">
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <!--staff ID-->
                        <div class="row">
                            <div class="col-md-2 " style="white-space:nowrap">
                                @Html.LabelFor(model => model.staffID, "Staff ID", htmlAttributes: new { @class = "control-label col-md-1" })
                            </div>

                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.staffIDInString, new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.staffIDInString, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />
                        <!--first and last name-->
                        <div class="container-fluid form-group">
                            <div class="row">
                                <div class="col-xs-2" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.firstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                                </div>


                                <div class="col-xs-2" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.lastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <hr />


                        <!--phone number and user name-->
                        <div class="container-fluid form-group">
                            <div class="row">
                                <div class="col-xs-2">
                                    @Html.LabelFor(model => model.phoneNo, "Phone Number", htmlAttributes: new { @class = "control-label col-md-3" })
                                </div>

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.phoneNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.phoneNo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-2" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.userName, "User Name", htmlAttributes: new { @class = "control-label col-md-1" })
                                </div>

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <hr />

                        <!--Gender-->
                        <div class="row">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.gender, "Gender", htmlAttributes: new { @class = "control-label col-md-3" })
                            </div>

                            <div class="col-md-4">
                                <select class="form-control" id="gender" name="gender">
                                    <option value="M">Male</option>
                                    <option value="F">Female</option>
                                </select>
                            </div>
                        </div>
                        <hr />

                        <!--email address-->

                        <div class="row">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.email, "Email Address", htmlAttributes: new { @class = "control-label col-md-1" })
                            </div>

                            <div class="col-md-4">
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />

                        <!--designation and department name-->
                        <div class="container-fluid form-group">
                            <div class="row">
                                <div class="col-xs-2" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.designation, "Designation", htmlAttributes: new { @class = "control-label col-md-4" })
                                </div>

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-xs-2" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.deptName, "Department", htmlAttributes: new { @class = "control-label col-md-4" })
                                </div>

                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.deptName, new SelectList(Model.departmentList, "Key", "Value"), "- Select Department -", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.deptName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <hr />

                        <!--employee start and end date-->
                        <div class="container-fluid form-group">
                            <div class="row">
                                <div class="col-xs-2" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.empStartDate, "Emp. Start Date", htmlAttributes: new { @class = "control-label col-md-1", type = "Date" })
                                </div>

                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.empStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                    @Html.ValidationMessageFor(model => model.empStartDate, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-xs-2" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.empEndDate, "Emp.End Date", htmlAttributes: new { @class = "control-label col-md-4" })
                                </div>

                                <div class="col-md-4">
                                    @{
                                        string endDateFormat = "";
                                    }
                                    @if (Model.empEndDate.Year != 1)
                                    {
                                        endDateFormat = "{0:yyyy-MM-dd}";
                                    }
                                    @Html.TextBoxFor(model => model.empEndDate, endDateFormat, new { @class = "form-control", type = "date" })
                                    @Html.ValidationMessageFor(model => model.empEndDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <hr />

                        <!--admin role-->
                        <div class="row">
                        <div class="col-xs-3" style="white-space:nowrap">
                            @Html.LabelFor(model => model.isAdmin, "Administrator Role", htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="form-inline">
                            @Html.EditorFor(model => model.isAdmin)
                            @Html.ValidationMessageFor(model => model.isAdmin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />

                    <!--staff role and opt. staff role-->
                    <div class="container-fluid form-group">
                        <div class="col-xs-2" style="white-space:nowrap">
                            @Html.LabelFor(model => model.staffType, "Opt. Staff Role", htmlAttributes: new { @class = "control-label col-md-1" })
                        </div>

                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.staffType, new SelectList(Model.staffTypeSelectionOptions, "Key", "Value"), "- Select type -", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.staffType, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-2" style="white-space:nowrap">
                            @Html.LabelFor(model => model.optionalStaffType, "Opt. Staff Role", htmlAttributes: new { @class = "control-label col-md-4" })
                        </div>

                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.optionalStaffType, new SelectList(Model.staffTypeSelectionOptions, "Key", "Value"), "- Select type -", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.optionalStaffType, "", new { @class = "text-danger" })
                        </div>
                    </div>
               
                        <hr />
                        
 
                        <!--opt.LM               
                        <div class="row">
                                    <div class="col-md-4" style="white-space:nowrap">
                                        @Html.LabelFor(model => model.secondLineManager, "Optional Second Line Manager", htmlAttributes: new { @class = "control-label col-md-3" })
                                    </div>
                                
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.secondLineManager, new SelectList(Model.SecondLMSelectionOptions, "Key", "Value"), "- Secondary Line Manager -", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.secondLineManager, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                        <hr />-->
                <!--active account-->
                       <div class="row">
                                    <div class="col-md-3" style="white-space:nowrap">
                                        @Html.LabelFor(model => model.accountStatus, "Active Account", htmlAttributes: new { @class = "control-label col-md-4" })
                                    </div>
                                
                                    <div class="form-inline">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.accountStatus)
                                        </div>
                                    </div>
                               
                                    <div class="form-inline">
                                        @Html.ValidationMessageFor(model => model.accountStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-10">
                                <input type="submit" value="Submit" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            </div>
  }
</div>
                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                    <script>
                        $(document).ready(function () {
                            var $this = $("#isAdmin");

                            if ($this.is(':checked')) {
                                $('#staffType').attr("disabled", "disabled")
                                $('#optionalStaffType').attr("disabled", "disabled")
                            }
                        });
                        $('#isAdmin').click(function () {
                            var $this = $(this);

                            if ($this.is(':unchecked')) {
                                $('#staffType').removeAttr("disabled");
                                $('#optionalStaffType').removeAttr("disabled");
                            }
                            else {
                                $('#staffType').attr("disabled", "disabled")
                                $('#optionalStaffType').attr("disabled", "disabled")
                            }
                        });
                    </script>
                    @if (TempData["SuccessMessage"] != null)
    {
                        <script>
                            $(document).ready(function () {
                                alert('@TempData["SuccessMessage"]');
                            });
                        </script>
                    }
                }
