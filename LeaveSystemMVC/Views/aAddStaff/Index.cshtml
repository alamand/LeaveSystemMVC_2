@model LeaveSystemMVC.Models.sEmployeeModel
@Html.Partial("_LeftMenu")


<div class="col-md-10">
    <h2>New Staff Member</h2>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="col-md-10">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="text-muted bootstrap-admin-box-title">Application Details</div>
                </div>
                <div class="bootstrap-admin-panel-content">
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!--contains staff ID-->
    <div class="row">
        <div class="col-md-2" style="white-space:nowrap">
            @Html.LabelFor(model => model.staffID, "Staff ID", htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-2">
            @Html.TextBoxFor(model => model.staffIDInString, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.staffIDInString, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <!--contains first and last name-->
    <div class="container-fluid form-group">
        <div class="row">
            <div class="col-xs-2" style="white-space:nowrap">
                @Html.LabelFor(model => model.firstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-4">
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>

            <div class="col-xs-2" style="white-space:nowrap">
                @Html.LabelFor(model => model.lastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-4">
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />

    <!-- contains phone number and user name-->
    <div class="container-fluid form-group">
        <div class="row">
            <div class="col-xs-2" style="white-space:nowrap">
                @Html.LabelFor(model => model.phoneNo, "Phone Number", htmlAttributes: new { @class = "control-label col-md-3" })
            </div>

            <div class="col-md-4">
                @Html.EditorFor(model => model.phoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phoneNo, "", new { @class = "text-danger" })
            </div>


            <div class="col-xs-2" style="white-space:nowrap">
                @Html.LabelFor(model => model.userName, "User Name", htmlAttributes: new { @class = "control-label col-md-1" })
            </div>

            <div class="col-md-4">
                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>
    <hr />

    <!--contains gender-->
    <div class="row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.gender, "Gender", htmlAttributes: new { @class = "control-label col-md-3" })
        </div>

        <div class="col-md-4">
            <select class="form-control" id="gender" name="gender">
                <option value="M">Male</option>
                <option value="F">Female</option>
            </select>
        </div>
    </div>

    <hr />


    <!--contains email-->
    <div class="row">
        <div class="col-md-2" style="white-space:nowrap">
            @Html.LabelFor(model => model.email, "Email Address", htmlAttributes: new { @class = "control-label col-md-1" })
        </div>

        <div class="col-md-4">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />

    <!--contains designation and department name-->
    <div class="container-fluid form-group">
        <div class="row">
            <div class="col-sm-2" style="white-space:nowrap">
                @Html.LabelFor(model => model.designation, "Designation", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-4">
                @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
            </div>

            <div class="col-sm-2" style="white-space:nowrap">
                @Html.LabelFor(model => model.deptName, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="col-md-4">
                @Html.DropDownListFor(model => model.deptName, new SelectList(Model.departmentList, "Key", "Value"), "- Select Department -", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.deptName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
                        <hr />
    <!--contains empy. start date-->
                        
                            <div class="row">
                                <div class="col-xs-3" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.empStartDate, "Employment Start Date", htmlAttributes: new { @class = "control-label col-md-2", type = "Date" })
                                </div>

                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.empStartDate)
                                    @Html.ValidationMessageFor(model => model.empStartDate, "", new { @class = "text-danger" })
                                </div>
                                </div>
                        <hr />

                        <!--admin role-->
                        <div class="row">
                                <div class="col-xs-3" style="white-space:nowrap">
                                    @Html.LabelFor(model => model.isAdmin, "Administrator", htmlAttributes: new { @class = "control-label col-md-2" })
                                </div>

                                <div class="col-xs-6">
                                    @Html.CheckBoxFor(model => model.isAdmin)
                                    @Html.ValidationMessageFor(model => model.isAdmin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                    <hr />

                        <!--contains staff role and optional staff role-->

                                    <div class="container-fluid form-group">
                                    <div class="row">
                                        <div class="col-sm-2" style="white-space:nowrap">
                                            @Html.LabelFor(model => model.staffType, "Opt. Staff Role", htmlAttributes: new { @class = "control-label col-md-1" })
                                        </div>
        
                                            <div class="col-md-4">
                                                @Html.DropDownListFor(model => model.staffType, new SelectList(Model.staffTypeSelectionOptions, "Key", "Value"), "- Select type -", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.staffType, "", new { @class = "text-danger" })
                                            </div>
        
                                            <div class="col-sm-2" style="white-space:nowrap">
                                                @Html.LabelFor(model => model.optionalStaffType, "Opt. Staff Role", htmlAttributes: new { @class = "control-label col-md-4" })
                                            </div>
        
                                           
                                                <div class="col-md-4">
                                                    @Html.DropDownListFor(model => model.optionalStaffType, new SelectList(Model.staffTypeSelectionOptions, "Key", "Value"), "- Select type -", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.optionalStaffType, "", new { @class = "text-danger" })
                                                </div>
                                        </div>
                                    </div>

                                        <hr />

                        <!--contains optional LM
                        <div class="row">
                            <div class="col-md-4" style="white-space:nowrap">
                                @Html.LabelFor(model => model.secondLineManager, "Optional Second Line Manager", htmlAttributes: new { @class = "control-label col-md-3" })
                            </div>

                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.secondLineManager, new SelectList(Model.SecondLMSelectionOptions, "Key", "Value"), "- Secondary Line Manager -", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.secondLineManager, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <hr />-->
                        <!--submit button-->
                                        <div class="form-group">
                                            <div class="col-md-offset-4 col-md-10">
                                                <input type="submit" value="Submit" class="btn btn-default" />
                                            </div>
                                        </div>
                                    </div>
                </div>
            </div>
            </div>
        
    }
</div>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                    <script>
                        $(document).ready(function () {
                            var $this = $("#isAdmin");

                            if ($this.is(':checked')) {
                                $('#staffType').attr("disabled", "disabled")
                                $('#optionalStaffType').attr("disabled", "disabled")
                            }
                        });
                        $('#isAdmin').click(function () {
                            var $this = $(this);

                            if ($this.is(':unchecked')) {
                                $('#staffType').removeAttr("disabled");
                                $('#optionalStaffType').removeAttr("disabled");
                            }
                            else {
                                $('#staffType').attr("disabled", "disabled")
                                $('#optionalStaffType').attr("disabled", "disabled")
                            }
                        });
                    </script>

                    @if (ViewBag.SuccessMessage != null)
    {
                        <script>
                            $(document).ready(function () {
                                alert('@ViewBag.SuccessMessage');
                            });
                        </script>
                    }
                }
